<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net48;netstandard2.0;net5.0</TargetFrameworks>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<GpuProject>FileOnQ.Imaging.Raw.Gpu.Cuda</GpuProject>
		<RootDir>$(ProjectDir)../../</RootDir>
		<TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeReferencedProjectInPackage</TargetsForTfmSpecificContentInPackage>

		<!-- NuGet Package Properties -->
		<PackageId>FileOnQ.Imaging.Raw</PackageId>
		<Summary>FileOnQ Raw Imaging library</Summary>
		<PackageTag>image, raw</PackageTag>
		<Title>FileOnQ.Imaging.Raw</Title>
		<Description>FileOnQ Raw Imaging library</Description>
		<PackageIcon>fileonq.png</PackageIcon>
		<Product>$(AssemblyName) ($(TargetFramework))</Product>
		<PackageVersion>$(Version)$(VersionSuffix)</PackageVersion>
		<Authors>FileOnQ</Authors>
		<Owners>fileonq</Owners>
		<NeutralLanguage>en</NeutralLanguage>
		<Copyright>© FileOnQ, Inc. All rights reserved.</Copyright>
		<License>LGPL</License>
		<RepositoryUrl>https://github.com/FileOnQ/Imaging.Raw</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<!-- End NuGet Package Properties -->
		
		<!-- Start NuGet Symbols Package Properties -->
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<!-- End1 NuGet Symbols Package Properties -->
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net48'">
		<Reference Include="System.Drawing" />
		<PackageReference Include="System.Memory" Version="4.5.4" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0'">
		<PackageReference Include="System.Drawing.Common" Version="5.0.2" />
		<PackageReference Include="System.Memory" Version="4.5.4" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net5.0'">
		<PackageReference Include="System.Drawing.Common" Version="5.0.2" />
	</ItemGroup>

	<ItemGroup>
		<None Update="*.dll">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<None Include="$(RootDir)\images\fileonq.png" Pack="true" PackagePath="" />
	</ItemGroup>

	<!-- NOTE - 8/2/2021 - @ahoefling - Required to add native dlls for each target framework during 'dotnet pack' https://stackoverflow.com/questions/49160673/how-to-include-a-local-dll-reference-in-to-a-nuget-package-when-calling-msbuild -->
	<Target Name="IncludeReferencedProjectInPackage" Condition="'$(IncludeBuildOutput)' != 'false'">
		<ItemGroup>
			<TfmSpecificPackageFile Include="*.dll" PackagePath="lib/$(TargetFramework)" />
		</ItemGroup>
	</Target>

	<!-- NOTE - 7/30/2021 - @ahoefling - Only build LibRaw if it is a rebuild or clean. The binaries take a long time to compile and don't change often -->
	<!-- NOTE - 7/30/2021 - @ahoefling - This build target only works with MSBuild through Visual Studio-->
	<Target Name="LibRaw" BeforeTargets="DispatchToInnerBuilds" Condition="!Exists('libraw32.dll') and !Exists('libraw.dll')">
		<Exec Command="libraw.bat x64" WorkingDirectory="$(RootDir)/build" />
		<Copy SourceFiles="$(RootDir)/LibRaw/bin/libraw.dll" DestinationFolder="." />

		<Exec Command="libraw.bat x86" WorkingDirectory="$(RootDir)/build" />
		<Copy SourceFiles="$(RootDir)/LibRaw/bin/libraw32.dll" DestinationFolder="." />
	</Target>

	<Target Name="CleanLibRaw" BeforeTargets="Clean">
		<Delete Files="libraw.dll" />
		<Delete Files="libraw32.dll" />
	</Target>

	<!-- NOTE 7/30/2021 - @ahoefling - Building the GPU binaries on every build ensures the latest kernels are included with each build -->
	<Target Name="GpuProject" BeforeTargets="DispatchToInnerBuilds">
		<Exec Command="dotnet tool restore" WorkingDirectory="$(RootDir)" />
		<Exec Command="dotnet cake --Target=Build-GPU --Configuration=$(Configuration) --Platform=x64" WorkingDirectory="$(RootDir)" />
		<Exec Command="dotnet cake --Target=Build-GPU --Configuration=$(Configuration) --Platform=Win32" WorkingDirectory="$(RootDir)" />

		<Copy SourceFiles="../$(GpuProject)/bin/Win32/$(Configuration)/$(GpuProject)32.dll" DestinationFolder="." />
		<Copy SourceFiles="../$(GpuProject)/bin/x64/$(Configuration)/$(GpuProject).dll" DestinationFolder="." />
	</Target>

</Project>
