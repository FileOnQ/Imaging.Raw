<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="15.0">
	<PropertyGroup>
		<!-- NuGet Package Properties -->
		<PackageId>FileOnQ.Imaging.Raw</PackageId>
		<Summary>FileOnQ Raw Imaging library</Summary>
		<PackageTag>image, raw</PackageTag>
		<Title>FileOnQ.Imaging.Raw</Title>
		<Description>FileOnQ Raw Imaging library</Description>
		<PackageIcon>fileonq.png</PackageIcon>
		<Product>$(AssemblyName) ($(TargetFramework))</Product>
		<PackageVersion>$(Version)$(VersionSuffix)</PackageVersion>
		<Authors>FileOnQ</Authors>
		<Owners>fileonq</Owners>
		<NeutralLanguage>en</NeutralLanguage>
		<Copyright>© FileOnQ, Inc. All rights reserved.</Copyright>
		<License>LGPL</License>
		<RepositoryUrl>https://github.com/FileOnQ/Imaging.Raw</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<!-- End NuGet Package Properties -->
		
		<!-- Start NuGet Symbols Package Properties -->
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<!-- End1 NuGet Symbols Package Properties -->
	</PropertyGroup>

	<ItemGroup>
		<None Include="$(RootDir)\images\fileonq.png" Pack="true" PackagePath="" />
	</ItemGroup>

	<ItemGroup>
		<!-- Copy all win-x86 native binaries -->
		<Content Include="*32.dll" Pack="True" PackagePath="runtimes\win-x86\native\" Link="runtimes\win-x86\native\%(Filename)%(Extension)" CopyToOutputDirectory="Always" />

		<!-- Copy all win-x64 native binaries -->
		<Content Include="libraw.dll" Pack="True" PackagePath="runtimes\win-x64\native" Link="runtimes\win-x64\native\%(Filename)%(Extension)" CopyToOutputDirectory="Always" />
		<Content Include="FileOnQ.Imaging.Raw.Gpu.Cuda.dll" Pack="True" PackagePath="runtimes\win-x64\native" Link="runtimes\win-x64\native\%(Filename)%(Extension)" CopyToOutputDirectory="Always" />
	</ItemGroup>

	<!-- NOTE - 8/3/2021 - @ahoefling - This copies all dlls to output folder so direct project references work. Without this the regular unit tests will fail. However, when the project
	            reference is using NuGet instead of direct project reference the dlls can be placed in the runtimes/**/native folder for net5+. -->
	<ItemGroup>
		<None Include="*.dll" CopyToOutputDirectory="Always" />
	</ItemGroup>
	
	<!-- Adds targets to NuGet which runs additional targets downstream. These targets are used for copying native dlls from the package to the bin directory -->
	<ItemGroup>
		<Content Include="Build\FileOnQ.Imaging.Raw.targets" Pack="true" PackagePath="build\net48" />
	</ItemGroup>

</Project>