name: FileOnQ.Imaging.Raw

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        include: 
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'AnyCPU'
            library: 'library'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'x64'
            library: 'library'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'x86'
            library: 'library'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'AnyCPU'
            library: 'nuget'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'x64'
            library: 'nuget'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            architecture: 'x86'
            library: 'nuget'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
        
    - name: Install CUDA
      env:
        cuda: ${{ matrix.cuda }}
        visual_studio: ${{ matrix.visual_studio }}
      shell: powershell
      run: .\build\cuda.ps1
      
    - name: Check NVCC
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102

    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: 5.x

    - name: Build
      run: dotnet build src/FileOnQ.Imaging.Raw/FileOnQ.Imaging.Raw.csproj
      
    - name: Pack NuGet
      if: ${{ matrix.library == 'nuget' }}
      run: dotnet pack src/FileOnQ.Imaging.Raw/FileOnQ.Imaging.Raw.csproj -c Release -o . /p:Version=0.0.0-local.1 /p:PackageVersion=0.0.0-local.1

    - name: Test NuGet
      if: ${{ matrix.library == 'nuget' }}
      run: dotnet test --logger:"console;verbosity=detailed" tests/FileOnQ.Imaging.Raw.Tests.NuGet.${{ matrix.architecture }}/FileOnQ.Imaging.Raw.Tests.NuGet.${{ matrix.architecture }}.csproj --filter TestCategory=Integration
      
    - name: Test Library
      if: ${{ matrix.library == 'library' }}
      run: dotnet test --logger:"console;verbosity=detailed" tests/FileOnQ.Imaging.Raw.Tests.${{ matrix.architecture }}/FileOnQ.Imaging.Raw.Tests.${{ matrix.architecture }}.csproj --filter TestCategory=Integration
