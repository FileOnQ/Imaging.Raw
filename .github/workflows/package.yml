name: Create NuGet Package (1.0.0)

# TODO - 8/2/2021 - @ahoefling - Add support for build tagging which will create a final build
on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        include: 
          - os: windows-2019
            cuda: 'CUDA-11.4.0'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Install CUDA
      env:
        cuda: ${{ matrix.cuda }}
        visual_studio: ${{ matrix.visual_studio }}
      shell: powershell
      run: .\build\cuda.ps1

    - name: Check NVCC
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102

    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: 5.x

    - name: Set Dev Version
      if: ${{ github.ref == 'main' }}
      run: echo "PACKAGE_VERSION=1.0.0-dev.${{ GITHUB.RUN_NUMBER }}" >> $env:GITHUB_ENV
      
    - name: Set PR Version
      if: ${{ contains(github.ref, 'pull') }}
      run: echo "PACKAGE_VERSION=1.0.0-pr.${{ GITHUB.RUN_NUMBER }}" >> $env:GITHUB_ENV
        
    - name: Test Version
      run: echo "Version = ${{ env.PACKAGE_VERSION }}"

    - name: Pack
      run: dotnet pack src/FileOnQ.Imaging.Raw/FileOnQ.Imaging.Raw.csproj -c Release -o . /p:Version=${{ env.PACKAGE_VERSION }} /p:PackageVersion=${{ env.PACKAGE_VERSION }}

    - name: Upload NuGet Package
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: | 
          *.nupkg
          *.snupkg

  publish:
    needs: build
    runs-on: windows-2019
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Packages
        uses: actions/download-artifact@v2
        with:
          name: Packages